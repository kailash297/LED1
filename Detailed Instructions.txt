Bill of Material (Items needed)
1 X Wemos Mini D1 (V3.0.0)
1 X Raspberry Pi3 (9.9 Stretch Version)
1 X Windows 10 64-bit O/S x64-based Processor (for Arduino configuration)
1 X Micro-USB to USB Cable

Step1a: MQTT Server setup in RaspberryPi3 under root user.
 sudo apt-get update
 sudo apt-get upgrade
 sudo apt-get install mosquitto -y
 sudo apt-get install mosquitto-clients y

Step1b: Perform MQTT testing between Server and Client within RPi3 itself.
Check whether Mosquitto is running and up 
 mosquitto -v
 
Open two terimnals.
 In the first terminal, enter mosquitto_sub -d -t MQTT_TestTopic
 In the second terminal, enter mosquitto_pub -d -t MQTT_TtestTopic -m "Hello world!"
 The first terminal should display the message "Hello world" that has been published. 
Login into your router and perform Address reservation against the RPi3.

Step2: Setting up Wemos in Windows 10
Connect the Micro USB end to Wemos and USB end to the Windows 10 Machine.
Ensure that Wemos's in-built Blue LED light flickers when it is powered by the USB cable.
Using Device Manager > Ports (COM & LPT), verify whether USB-SERIAL CH340 is displayed as COM5
Switch off the AntiVirus and Firewall when sketch is verified / uploaded.

Step3: Arduino Configuration
Install Arduino IDE (ver 1.8.9) from Arduino Web portal https://www.arduino.cc/en/Main/Software.
Under File/Preferences, in Settings Tab, update 'Additional Boards Manager URL' as http://arduino.esp8266.com/stable/package_esp8266com_index.json
Under Tools/Board, using Boards Manager, install 'esp8266' to install ESP8266 Board Package.
Under Tools/Board, select the Board as 'LOLIN(WEMOS) D1 R2 & mini' under ESP8266 Boards 2.5.0 (as on 10-May-2019)
Upload Speed: 115200, CPU Freq: 80 MHz, Flash Size: 4M (1M SPIFFS), Debug Port: Serial, Debug Level: Core, Port: COM5, Programmer: Arduion as ISP
Do not panic, if Tools > Board Info displays BN: Unkown Board VID: 1A86 PID: 7523 SN: Upload any sketch to obtain it. This should still work.

Step4: Wemos Mini D1 Testing
Verify Arduino environment is error free by executing example sketch through File > Examples > 01.Basics > Blink
Upon upload, the inbuilt Blue LED will flicker every 1 second.
To stop/reset above example Arduino upload the below code:
 void setup() {}
 void loop() {}
 
Step5: Test Wi-Fi connection in Wemos Mini D1
Adapted from https://tttapa.github.io/ESP8266/Chap07%20-%20Wi-Fi%20Connections.html

#include <ESP8266WiFi.h>        // Add this to include Wi-Fi library

const char* ssid     = "SSID";         // The SSID (name) of Wi-Fi network you want to connect to
const char* password = "PASSWORD";     // The password of Wi-Fi network

void setup() {
  Serial.begin(115200);         // Start the Serial communication to send messages to the computer
  delay(10);
  Serial.println('\n');
  
  WiFi.begin(ssid, password);             // Connect to network
  Serial.print("Connecting to ");
  Serial.print(ssid); Serial.println(" ...");

  int i = 0;
  while (WiFi.status() != WL_CONNECTED) { // Wait for the Wi-Fi to connect
    delay(1000);
    Serial.print(++i); Serial.print(' ');
  }

  Serial.println('\n');
  Serial.println("Connection established!");  
  Serial.print("IP address:\t");
  Serial.println(WiFi.localIP());         // Send IP address of ESP8266 to Computer
}

void loop() { }

If you are unable to see the IP address, use Fing or Network Scanner app to detect the IP address of the connected Wemos Mini D1 under the Manufacture name 'Expressif Inc.'

Step6:(Optional)
Install Node-Red in RaspberryPi3
Test whether you are able to publish and subscribe MQTT messages in Node-Red using the below test flow. It can be imported straight into the editor by pasting the json into the Import dialog

[{"id":"a0b58e59.c239a","type":"mqtt in","z":"55df07c5.0612a8","name":"subscribe","topic":"topic/hello","qos":"2","broker":"1be3a590.6f59ba","x":250,"y":180,"wires":[["4b90e3e2.092cec"]]},{"id":"1be3a590.6f59ba","type":"mqtt-broker","z":"","name":"","broker":"localhost","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""}]

Step7: MQTT Sketch in Wemos
Under Tools/Library Manager, install 'PubSubClient' ver 2.7.0
Under File>Examples>PubSubClient, use mqtt_esp8266 sketch for reference.
Update the sketch to publish the topic 'outTopic' for every one second.
After updating SSID, Password and mqtt_server details, upload the sketch.

Step8: Final Showdown
In Rpi3, start the MQTT Server.
Client1: Using Rpi3, subscribe for the topic 'outTopic'
Client2: Install 'MyMQTT' app from Google Playstore and under settings, give the MQTT Server ip address and subscribe for the topic 'outTopic'.
Plug the Wemos Mini D1 to any power source.
Voila! Wemos Mini D1 publishes 'Hello World' and using MQTT, the same is subscribed through Rpi3 as well as in Android phone.

Conditions: Rpi3, Wemos and Android phone - All three are connected to same Wi-Fi Network. It can be either Home Wi-Fi or Wi-Fi hotspot from your SmartPhone. Tested in both environments and it works.
